<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    XSD (XML Schema Definition) pour le projet PadChest XML
    Version avancée avec types de données et contraintes
    Basé sur les 16 champs essentiels du CSV PadChest
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://padchest.hepl.be/schema"
           xmlns:tns="http://padchest.hepl.be/schema"
           elementFormDefault="qualified">

  <!-- ========== TYPES SIMPLES ========== -->
  
  <!-- Type pour les identifiants d'images -->
  <xs:simpleType name="imageIdType">
    <xs:restriction base="xs:string">
      <xs:minLength value="10"/>
      <xs:maxLength value="100"/>
      <xs:pattern value="[a-zA-Z0-9_\-\.]+"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les identifiants de patients -->
  <xs:simpleType name="patientIdType">
    <xs:restriction base="xs:string">
      <xs:minLength value="10"/>
      <xs:maxLength value="50"/>
      <xs:pattern value="[0-9]+"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les dates de naissance -->
  <xs:simpleType name="birthYearType">
    <xs:restriction base="xs:decimal">
      <xs:minInclusive value="1900"/>
      <xs:maxInclusive value="2024"/>
      <xs:fractionDigits value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les projections DICOM -->
  <xs:simpleType name="projectionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PA"/>
      <xs:enumeration value="AP"/>
      <xs:enumeration value="LATERAL"/>
      <xs:enumeration value="L"/>
      <xs:enumeration value="POSTEROANTERIOR"/>
      <xs:enumeration value="AP_horizontal"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les indicateurs pédiatriques -->
  <xs:simpleType name="pediatricType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Yes"/>
      <xs:enumeration value="No"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les méthodes de projection -->
  <xs:simpleType name="methodProjectionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Manual review of DICOM fields"/>
      <xs:enumeration value="Automatic"/>
      <xs:enumeration value="Semi-automatic"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les méthodes de labellisation -->
  <xs:simpleType name="methodLabelType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Physician"/>
      <xs:enumeration value="Radiologist"/>
      <xs:enumeration value="AI"/>
      <xs:enumeration value="Manual"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les identifiants CUI (UMLS) -->
  <xs:simpleType name="cuiType">
    <xs:restriction base="xs:string">
      <xs:pattern value="C[0-9]{7}"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les identifiants de rapport -->
  <xs:simpleType name="reportIdType">
    <xs:restriction base="xs:positiveInteger">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="99999999"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type pour les répertoires d'images -->
  <xs:simpleType name="imageDirType">
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="999"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- ========== TYPES COMPLEXES ========== -->

  <!-- Type pour les éléments de label -->
  <xs:complexType name="labelType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="cui" type="cuiType" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Type pour les éléments de localisation -->
  <xs:complexType name="locationType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="cui" type="cuiType" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Type pour les informations patient -->
  <xs:complexType name="patientType">
    <xs:sequence>
      <xs:element name="id" type="patientIdType"/>
      <xs:element name="birth" type="birthYearType"/>
    </xs:sequence>
    <xs:attribute name="anonymized" type="xs:boolean" default="true"/>
  </xs:complexType>

  <!-- Type pour les informations d'étude -->
  <xs:complexType name="studyType">
    <xs:sequence>
      <xs:element name="studyId" type="patientIdType"/>
      <xs:element name="projection" type="projectionType"/>
      <xs:element name="pediatric" type="pediatricType"/>
      <xs:element name="methodProjection" type="methodProjectionType"/>
    </xs:sequence>
    <xs:attribute name="studyId" type="patientIdType" use="optional"/>
  </xs:complexType>

  <!-- Type pour les labels -->
  <xs:complexType name="labelsType">
    <xs:sequence>
      <xs:element name="label" type="labelType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="optional"/>
  </xs:complexType>

  <!-- Type pour les localisations -->
  <xs:complexType name="localizationsType">
    <xs:sequence>
      <xs:element name="location" type="locationType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="optional"/>
  </xs:complexType>

  <!-- Type pour les informations de diagnostic -->
  <xs:complexType name="diagnosisType">
    <xs:sequence>
      <xs:element name="labels" type="labelsType"/>
      <xs:element name="localizations" type="localizationsType"/>
      <xs:element name="labelsLocalizationsBySentence" type="xs:string"/>
      <xs:element name="methodLabel" type="methodLabelType"/>
      <xs:element name="reportId" type="reportIdType"/>
    </xs:sequence>
    <xs:attribute name="confidence" type="xs:decimal" use="optional">
      <xs:annotation>
        <xs:documentation>Niveau de confiance du diagnostic (0.0 à 1.0)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Type pour les rapports -->
  <xs:complexType name="reportType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="language" type="xs:language" use="optional" default="es"/>
        <xs:attribute name="length" type="xs:nonNegativeInteger" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Type pour les images -->
  <xs:complexType name="imageType">
    <xs:sequence>
      <xs:element name="patient" type="patientType"/>
      <xs:element name="study" type="studyType"/>
      <xs:element name="diagnosis" type="diagnosisType"/>
      <xs:element name="report" type="reportType"/>
    </xs:sequence>
    <xs:attribute name="id" type="imageIdType" use="required"/>
    <xs:attribute name="imageDir" type="imageDirType" use="optional"/>
  </xs:complexType>

  <!-- Type pour la collection d'images -->
  <xs:complexType name="imagesType">
    <xs:sequence>
      <xs:element name="image" type="imageType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string" use="optional" default="1.0"/>
    <xs:attribute name="created" type="xs:date" use="optional"/>
  </xs:complexType>

  <!-- ========== ÉLÉMENTS RACINES ========== -->

  <!-- Élément racine -->
  <xs:element name="images" type="imagesType">
    <xs:annotation>
      <xs:documentation>Collection d'images radiographiques thoraciques PadChest</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!-- ========== CONTRAINTES GLOBALES ========== -->

  <!-- Contrainte : Au moins un label ou une localisation par image -->
  <xs:assert test="every $img in image satisfies 
                   (count($img/diagnosis/labels/label) > 0 or 
                    count($img/diagnosis/localizations/location) > 0)">
    <xs:annotation>
      <xs:documentation>Chaque image doit avoir au moins un label ou une localisation</xs:documentation>
    </xs:annotation>
  </xs:assert>

  <!-- Contrainte : Cohérence des compteurs -->
  <xs:assert test="every $labels in //labels satisfies 
                   (not($labels/@count) or $labels/@count = count($labels/label))">
    <xs:annotation>
      <xs:documentation>Le compteur de labels doit correspondre au nombre réel de labels</xs:documentation>
    </xs:annotation>
  </xs:assert>

  <xs:assert test="every $localizations in //localizations satisfies 
                   (not($localizations/@count) or $localizations/@count = count($localizations/location))">
    <xs:annotation>
      <xs:documentation>Le compteur de localisations doit correspondre au nombre réel de localisations</xs:documentation>
    </xs:annotation>
  </xs:assert>

  <!-- Contrainte : Longueur du rapport -->
  <xs:assert test="every $report in //report satisfies 
                   (not($report/@length) or $report/@length = string-length($report))">
    <xs:annotation>
      <xs:documentation>La longueur du rapport doit correspondre à la longueur réelle du texte</xs:documentation>
    </xs:annotation>
  </xs:assert>

</xs:schema>
